{"ast":null,"code":"var _jsxFileName = \"/Users/jordangamache/Desktop/Projects/Website/reactjournal/src/index.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport Today from './Date';\nimport PropTypes from 'prop-types';\nimport ReactQuill from 'react-quill';\nimport firebase from 'firebase';\nimport { DB_CONFIG } from './Config';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.app = firebase.initializeApp(DB_CONFIG);\n    this.database = this.app.database().ref().child('entries');\n    var date = new Date();\n    var today = date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear();\n    var title = date.getMonth() + 1 + '/' + date.getDate();\n    this.state = {\n      name: 'Jordan',\n      date: today,\n      editorHtml: '',\n      theme: 'snow',\n      title: title,\n      entries: [],\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(html) {\n    this.setState({\n      editorHtml: html\n    });\n  }\n\n  handleThemeChange(newTheme) {\n    if (newTheme === \"core\") {\n      newTheme = null;\n      this.setState({\n        theme: newTheme\n      });\n    }\n  }\n\n  componentDidMount() {\n    const itemsRef = firebase.database().ref('entries');\n    itemsRef.on('value', snapshot => {\n      let entries = snapshot.val();\n      let newState = [];\n\n      for (let entry in entries) {\n        newState.push({\n          id: entry,\n          title: entries[entry].title,\n          articleBody: entries[entry].articleBody\n        });\n      }\n\n      this.setState({\n        entries: newState\n      });\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const itemsRef = firebase.database().ref('entries');\n    this.setState({\n      text: this.editorHtml.text()\n    });\n    const entry = {\n      title: this.state.title,\n      articleBody: this.state.text\n    };\n    itemsRef.push(entry);\n    this.setState({\n      title: '',\n      articleBody: '',\n      editorHtml: '',\n      text: ''\n    });\n  }\n\n  removeItem(itemId) {\n    const itemRef = firebase.database().ref(`/entries/${itemId}`);\n    itemRef.remove();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container box\",\n      style: {\n        backgroundColor: \"white\",\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Hello, {\n      name: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Today, {\n      date: this.state.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Begin your day here:\"), React.createElement(ReactQuill, {\n      theme: this.state.theme,\n      onChange: this.handleChange,\n      value: this.state.editorHtml,\n      modules: App.modules,\n      formats: App.formats,\n      bounds: '.app',\n      placeholder: this.props.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Save entry\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container box\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"title is-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Past Entries\"), React.createElement(\"div\", {\n      className: \"tile is-ancestor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tile is-vertical is-parent\",\n      id: \"tileContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.entries.map(entry => {\n      return React.createElement(\"div\", {\n        className: \"tile box is-child notification is-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: () => this.removeItem(entry.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"title is-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, entry.title), React.createElement(\"div\", {\n        className: \"has-text-centered\",\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), entry.articleBody);\n    })))));\n  }\n\n}\n\nApp.modules = {\n  toolbar: [[{\n    'header': '1'\n  }, {\n    'header': '2'\n  }, {\n    'font': []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], ['link', 'image', 'video'], ['clean']],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nApp.formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video'];\n/*\n * PropType validation\n */\n\nApp.propTypes = {\n  placeholder: PropTypes.string\n};\nrender(React.createElement(App, {\n  placeholder: \"Start here!\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 168\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/jordangamache/Desktop/Projects/Website/reactjournal/src/index.js"],"names":["React","Component","render","Hello","Today","PropTypes","ReactQuill","firebase","DB_CONFIG","App","constructor","app","initializeApp","database","ref","child","date","Date","today","getMonth","getDate","getFullYear","title","state","name","editorHtml","theme","entries","text","handleChange","bind","handleSubmit","html","setState","handleThemeChange","newTheme","componentDidMount","itemsRef","on","snapshot","val","newState","entry","push","id","articleBody","e","preventDefault","removeItem","itemId","itemRef","remove","backgroundColor","height","modules","formats","props","placeholder","map","padding","toolbar","size","clipboard","matchVisual","propTypes","string","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAC1BS,EAAAA,WAAW,GAAG;AACZ;AACF,SAAKC,GAAL,GAAWJ,QAAQ,CAACK,aAAT,CAAuBJ,SAAvB,CAAX;AACA,SAAKK,QAAL,GAAgB,KAAKF,GAAL,CAASE,QAAT,GAAoBC,GAApB,GAA0BC,KAA1B,CAAgC,SAAhC,CAAhB;AAGE,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,QAAIC,KAAK,GAAIF,IAAI,CAACG,QAAL,KAAgB,CAAjB,GAAoB,GAApB,GAAwBH,IAAI,CAACI,OAAL,EAAxB,GAAuC,GAAvC,GAA2CJ,IAAI,CAACK,WAAL,EAAvD;AACF,QAAIC,KAAK,GAAIN,IAAI,CAACG,QAAL,KAAgB,CAAjB,GAAoB,GAApB,GAAwBH,IAAI,CAACI,OAAL,EAApC;AACE,SAAKG,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,QADK;AAEXR,MAAAA,IAAI,EAAEE,KAFK;AAGXO,MAAAA,UAAU,EAAE,EAHD;AAIXC,MAAAA,KAAK,EAAE,MAJI;AAKdJ,MAAAA,KAAK,EAAEA,KALO;AAMdK,MAAAA,OAAO,EAAE,EANK;AAOdC,MAAAA,IAAI,EAAE;AAPQ,KAAb;AASA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACF,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACC;;AAEDD,EAAAA,YAAY,CAAEG,IAAF,EAAQ;AAClB,SAAKC,QAAL,CAAc;AACfR,MAAAA,UAAU,EAAEO;AADG,KAAd;AAGD;;AAEDE,EAAAA,iBAAiB,CAAEC,QAAF,EAAY;AAC3B,QAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACvBA,MAAAA,QAAQ,GAAG,IAAX;AACA,WAAKF,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAES;AAAT,OAAd;AACD;AACF;;AAEFC,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,QAAQ,GAAG9B,QAAQ,CAACM,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,CAAjB;AACAuB,IAAAA,QAAQ,CAACC,EAAT,CAAY,OAAZ,EAAsBC,QAAD,IAAc;AAClC,UAAIZ,OAAO,GAAGY,QAAQ,CAACC,GAAT,EAAd;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,KAAT,IAAkBf,OAAlB,EAA2B;AAC1Bc,QAAAA,QAAQ,CAACE,IAAT,CAAc;AACbC,UAAAA,EAAE,EAAEF,KADS;AAEbpB,UAAAA,KAAK,EAAEK,OAAO,CAACe,KAAD,CAAP,CAAepB,KAFT;AAGbuB,UAAAA,WAAW,EAAElB,OAAO,CAACe,KAAD,CAAP,CAAeG;AAHf,SAAd;AAKA;;AACD,WAAKZ,QAAL,CAAc;AACbN,QAAAA,OAAO,EAAEc;AADI,OAAd;AAGA,KAbD;AAcA;;AAEDV,EAAAA,YAAY,CAACe,CAAD,EAAI;AACfA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMV,QAAQ,GAAG9B,QAAQ,CAACM,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,CAAjB;AACA,SAAKmB,QAAL,CAAc;AACbL,MAAAA,IAAI,EAAE,KAAKH,UAAL,CAAgBG,IAAhB;AADO,KAAd;AAGA,UAAMc,KAAK,GAAG;AACbpB,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADL;AAEbuB,MAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWK;AAFX,KAAd;AAIAS,IAAAA,QAAQ,CAACM,IAAT,CAAcD,KAAd;AACA,SAAKT,QAAL,CAAc;AACbX,MAAAA,KAAK,EAAE,EADM;AAEbuB,MAAAA,WAAW,EAAE,EAFA;AAGbpB,MAAAA,UAAU,EAAE,EAHC;AAIbG,MAAAA,IAAI,EAAE;AAJO,KAAd;AAMA;;AAEDoB,EAAAA,UAAU,CAACC,MAAD,EAAS;AAClB,UAAMC,OAAO,GAAG3C,QAAQ,CAACM,QAAT,GAAoBC,GAApB,CAAyB,YAAWmC,MAAO,EAA3C,CAAhB;AACAC,IAAAA,OAAO,CAACC,MAAR;AACA;;AAGAjD,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAAEkD,QAAAA,eAAe,EAAE,OAAnB;AAA4BC,QAAAA,MAAM,EAAE;AAApC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWP,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWG,KADpB;AAEE,MAAA,QAAQ,EAAE,KAAKG,YAFjB;AAGE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,UAHpB;AAIE,MAAA,OAAO,EAAEhB,GAAG,CAAC6C,OAJf;AAKE,MAAA,OAAO,EAAE7C,GAAG,CAAC8C,OALf;AAME,MAAA,MAAM,EAAE,MANV;AAOE,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,WAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXD,EAYC;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAAyC,MAAA,OAAO,EAAE,KAAK1B,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZD,CAPF,EAqBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBH,EAsBG;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAACqB,QAAAA,eAAe,EAAE;AAAlB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAEC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAA4C,MAAA,EAAE,EAAC,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,KAAK7B,KAAL,CAAWI,OAAX,CAAmB+B,GAAnB,CAAwBhB,KAAD,IAAW;AAClC,aACC;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,MAAM,KAAKM,UAAL,CAAgBN,KAAK,CAACE,EAAtB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEC;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BF,KAAK,CAACpB,KAAjC,CAFD,EAGC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,KAAK,EAAE;AAACqC,UAAAA,OAAO,EAAE;AAAV,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,EAIEjB,KAAK,CAACG,WAJR,CADD;AAQA,KATA,CADK,CADF,CAFD,CAtBH,CADF;AA0CD;;AA1HyB;;AA6H5BpC,GAAG,CAAC6C,OAAJ,GAAc;AACZM,EAAAA,OAAO,EAAE,CACP,CAAC;AAAE,cAAU;AAAZ,GAAD,EAAmB;AAAC,cAAU;AAAX,GAAnB,EAAoC;AAAE,YAAQ;AAAV,GAApC,CADO,EAEP,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAFO,EAGP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAHO,EAIP,CAAC;AAAC,YAAQ;AAAT,GAAD,EAAsB;AAAC,YAAQ;AAAT,GAAtB,EACC;AAAC,cAAU;AAAX,GADD,EACmB;AAAC,cAAU;AAAX,GADnB,CAJO,EAMP,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CANO,EAOP,CAAC,OAAD,CAPO,CADG;AAUZC,EAAAA,SAAS,EAAE;AACT;AACAC,IAAAA,WAAW,EAAE;AAFJ;AAVC,CAAd;AAeA;;;;;AAIAtD,GAAG,CAAC8C,OAAJ,GAAc,CACZ,QADY,EACF,MADE,EACM,MADN,EAEZ,MAFY,EAEJ,QAFI,EAEM,WAFN,EAEmB,QAFnB,EAE6B,YAF7B,EAGZ,MAHY,EAGJ,QAHI,EAGM,QAHN,EAIZ,MAJY,EAIJ,OAJI,EAIK,OAJL,CAAd;AAOA;;;;AAGA9C,GAAG,CAACuD,SAAJ,GAAgB;AACdP,EAAAA,WAAW,EAAEpD,SAAS,CAAC4D;AADT,CAAhB;AAIA/D,MAAM,CAAC,oBAAC,GAAD;AAAK,EAAA,WAAW,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAmCgE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnC,CAAN","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport Today from './Date';\nimport PropTypes from 'prop-types';\nimport ReactQuill from 'react-quill';\nimport firebase from 'firebase';\nimport { DB_CONFIG } from './Config';\n\nclass App extends Component {\n  constructor() {\n    super();\n\t\tthis.app = firebase.initializeApp(DB_CONFIG);\n\t\tthis.database = this.app.database().ref().child('entries');\n\n\n    var date = new Date();\n    var today = (date.getMonth()+1)+'/'+date.getDate()+'/'+date.getFullYear();\n\t\tvar title = (date.getMonth()+1)+'/'+date.getDate();\n    this.state = {\n      name: 'Jordan',\n      date: today,\n      editorHtml: '',\n      theme: 'snow',\n\t\t\ttitle: title,\n\t\t\tentries: [],\n\t\t\ttext: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange (html) {\n    this.setState({\n\t\t\teditorHtml: html\n\t\t});\n  }\n\n  handleThemeChange (newTheme) {\n    if (newTheme === \"core\") {\n      newTheme = null;\n      this.setState({ theme: newTheme });\n    }\n  }\n\n\tcomponentDidMount() {\n\t\tconst itemsRef = firebase.database().ref('entries');\n\t\titemsRef.on('value', (snapshot) => {\n\t\t\tlet entries = snapshot.val();\n\t\t\tlet newState = [];\n\t\t\tfor (let entry in entries) {\n\t\t\t\tnewState.push({\n\t\t\t\t\tid: entry,\n\t\t\t\t\ttitle: entries[entry].title,\n\t\t\t\t\tarticleBody: entries[entry].articleBody\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tentries: newState\n\t\t\t});\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst itemsRef = firebase.database().ref('entries');\n\t\tthis.setState({\n\t\t\ttext: this.editorHtml.text()\n\t\t});\n\t\tconst entry = {\n\t\t\ttitle: this.state.title,\n\t\t\tarticleBody: this.state.text\n\t\t}\n\t\titemsRef.push(entry);\n\t\tthis.setState({\n\t\t\ttitle: '',\n\t\t\tarticleBody: '',\n\t\t\teditorHtml: '',\n\t\t\ttext: ''\n\t\t});\n\t}\n\n\tremoveItem(itemId) {\n\t\tconst itemRef = firebase.database().ref(`/entries/${itemId}`);\n\t\titemRef.remove();\n\t}\n\n\n  render() {\n    return (\n      <div className=\"container box\" style={{ backgroundColor: \"white\", height: \"100vh\" }}>\n        <div className=\"title\">\n          <Hello name={this.state.name} />\n        </div>\n        <div className=\"subtitle\">\n          <Today date={this.state.date} />\n        </div>\n        <div>\n          <p>Begin your day here:</p>\n          <ReactQuill\n            theme={this.state.theme}\n            onChange={this.handleChange}\n            value={this.state.editorHtml}\n            modules={App.modules}\n            formats={App.formats}\n            bounds={'.app'}\n            placeholder={this.props.placeholder}\n          />\n         <br />\n         <button className=\"button\" type=\"submit\" onClick={this.handleSubmit}>Save entry</button>\n         </div>\n         <br />\n         <div className=\"container box\" style={{backgroundColor: \"white\"}}>\n         <p className=\"title is-4\">Past Entries</p>\n          <div className=\"tile is-ancestor\">\n            <div className=\"tile is-vertical is-parent\" id=\"tileContainer\">\n\t\t\t\t\t\t{this.state.entries.map((entry) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"tile box is-child notification is-white\">\n\t\t\t\t\t\t\t\t<button className=\"delete\" onClick={() => this.removeItem(entry.id)}></button>\n\t\t\t\t\t\t\t\t\t<p className=\"title is-5\">{entry.title}</p>\n\t\t\t\t\t\t\t\t\t<div className=\"has-text-centered\" style={{padding: \"10px\"}}></div>\n\t\t\t\t\t\t\t\t\t{entry.articleBody}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n          </div>\n         </div>\n       </div>\n    );\n  }\n}\n\nApp.modules = {\n  toolbar: [\n    [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\n    [{size: []}],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [{'list': 'ordered'}, {'list': 'bullet'},\n     {'indent': '-1'}, {'indent': '+1'}],\n    ['link', 'image', 'video'],\n    ['clean']\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  }\n}\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nApp.formats = [\n  'header', 'font', 'size',\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\n  'list', 'bullet', 'indent',\n  'link', 'image', 'video'\n]\n\n/*\n * PropType validation\n */\nApp.propTypes = {\n  placeholder: PropTypes.string,\n}\n\nrender(<App placeholder=\"Start here!\"/>, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}